#!/usr/bin/env python

from six import iteritems
from os import path, environ

from ansible_vault_diff import lib

if 'AVD_REPO_NAME' not in environ:
    repo_name = lib.get_input('Enter repo name: ')
else:
    repo_name = environ['AVD_REPO_NAME']

if 'AVD_SOURCE_REMOTE_BRANCH' not in environ:
    source_remote_branch = lib.get_input('Enter source remote:branch: ')
else:
    source_remote_branch = environ['AVD_SOURCE_REMOTE_BRANCH']

if 'AVD_DESTINATION_REMOTE_BRANCH' not in environ:
    destination_remote_branch = lib.get_input('Enter destination remote:branch: ')
else:
    destination_remote_branch = environ['AVD_DESTINATION_REMOTE_BRANCH']

repos_path = path.abspath(path.join(path.dirname(__file__), "../data/repos"))
source_repo_path = path.join(repos_path, 'source')
destination_repo_path = path.join(repos_path, 'destination')

lib.remove_repo_data(source_repo_path)
lib.remove_repo_data(destination_repo_path)
try:
    lib.clone_repo(repo_name, source_remote_branch, source_repo_path)
    lib.clone_repo(repo_name, destination_remote_branch, destination_repo_path)

    results = lib.diff_repo(source_repo_path, destination_repo_path)
    print('\n== Results ==\n')
    for filename, result in iteritems(results):
        print('=== {0} ==='.format(filename))
        print(result),
    print('')
finally:
    lib.remove_repo_data(source_repo_path)
    lib.remove_repo_data(destination_repo_path)
